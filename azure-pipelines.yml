# Maven

# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
# This is an example of using VeraDemo Java test application with the Veracode Static Pipeline scanner.  A Veracode subscription is required.
trigger:
- main
pool:
  name: Default
steps:
- task: Maven@4
  inputs:
    mavenPomFile: 'app/pom.xml'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    testRunTitle: 'Test'
    javaHomeOption: 'JDKVersion'
    mavenVersionOption: 'Default'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
    
- task: Veracode@3
  inputs:
     ConnectionDetailsSelection: 'Service Connection'
     AnalysisService: 'vera_Azure'
     veracodeAppProfile: '$(system.teamProject)'
     version: '$(build.buildNumber)'
# #    filepath: '$(System.DefaultWorkingDirectory)'
     filepath: 'app/target/verademo.war'
     optargs: '-autoscan false' 
     createProfile: true
     importResults: true
     failBuildIfUploadAndScanBuildStepFails: false
     maximumWaitTime: '60'

# - task: Veracode Flaw Importer@3
#   inputs:
#     ConnectionDetailsSelection: 'Service Connection'
#     AnalysisService: 'vera_Azure'
#     veracodeAppProfile: 'myapp'
#     scanType: 'Dynamic, Static'
#     importType: 'All Flaws'
#     workItemType: 'Bug'
#     area: 'Azure_vera integration'
# #    overwriteAreaPathInWorkItemsOnImport: true
#     iterationPath: 'Azure_vera integration'
#     flawImportLimit: '1000'
